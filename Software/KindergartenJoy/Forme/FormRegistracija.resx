<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>